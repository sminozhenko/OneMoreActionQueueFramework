<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>OneMoreActionQueueLogTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class OneMoreActionQueueLogTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addInfoLogData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add infolog
    /// </summary>
    /// <param name = "_oneMoreActionQueue"><c>OneMoreActionQueue</c> caller record</param>
    /// <param name = "_exception">An <c>System.Exception</c> object</param>
    /// <param name = "_infoLogData">Infolog data</param>
    /// <param name = "_userConnection">An <c>UserConnection</c> assigned to action queue run; optional.</param>
    /// <returns>
    /// A created/updated record in the <c>OneMoreActionQueueLogTable</c> table or null if no infolog to be stored.
    /// </returns>
    [Hookable(false)]
    public static OneMoreActionQueueLogTable addInfoLogData(OneMoreActionQueue _oneMoreActionQueue, System.Exception _exception, InfologData _infoLogData, UserConnection _userConnection)
    {
        OneMoreActionQueueLogTable oneMoreActionQueueLogTable = OneMoreActionQueueLogTable::findByRefRecId(_oneMoreActionQueue.RecId, true, _userConnection);

        if (_infoLogData == conNull())
        {
            if (oneMoreActionQueueLogTable.RecId != 0)
            {
                oneMoreActionQueueLogTable.delete();
            }

            return null;
        }

        oneMoreActionQueueLogTable.RefRecId             =   _oneMoreActionQueue.RecId;
        oneMoreActionQueueLogTable.InfologData          =   _infoLogData;
        
        if (_exception != null)
        {
            oneMoreActionQueueLogTable.ExceptionTypeName    =   _exception.GetType().FullName;
            oneMoreActionQueueLogTable.StackTrace           =   _exception.StackTrace;
        }

        oneMoreActionQueueLogTable.write();

        return oneMoreActionQueueLogTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds <c>OneMoreActionQueueLogTable</c> record by <c>RefRecId</c> value
    /// </summary>
    /// <param name = "_refRecId">An <c>RefRecId</c> value</param>
    /// <param name = "_forupdate"> A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <param name = "_userConnection">An <c>UserConnection</c> assigned to action queue run; optional.</param>
    /// <returns>
    /// A record in the <c>OneMoreActionQueueLogTable</c> table otherwise, an empty record.
    /// </returns>
    [Hookable(false)]
    public static OneMoreActionQueueLogTable findByRefRecId(RefRecId _refRecId, boolean _forupdate = false, UserConnection _userConnection = null)
    {
        OneMoreActionQueueLogTable   ret;

        ret.selectForUpdate(_forupdate);

        if (_userConnection)
        {
            ret.setConnection(_userConnection);
        }

        if (_refRecId)
        {
            select firstonly ret
                where ret.RefRecId      ==  _refRecId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the last <c>OneMoreActionQueueLogTable</c> record by <c>RefRecId</c> value order by created date time
    /// </summary>
    /// <param name = "_refRecId">An <c>RefRecId</c> value</param>    
    /// <returns>
    /// A record in the <c>OneMoreActionQueueLogTable</c> table otherwise, an empty record.
    /// </returns>
    [Hookable(false)]
    public static OneMoreActionQueueLogTable findLast(RefRecId _refRecId)
    {
        OneMoreActionQueueLogTable   ret;


        if (_refRecId)
        {
            select firstonly ret
                order by CreatedDateTime desc
                where ret.RefRecId      ==  _refRecId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showInfoLog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Show infolog for current log record
    /// </summary>    
    [Hookable(false)]
    public void showInfoLog()
    {
        if (this.RecId && this.InfologData != conNull())
        {
            infolog.import(this.InfologData, true);
        }
        else
        {
            info("@OneMoreActionQueueFramework:OneMoreActionQueueNoInfologFound");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInfoLogText</Name>
				<Source><![CDATA[
    [
        Hookable(false),
        SysClientCacheDataMethod(false)
    ]
    public display InfologText getInfoLogText()
    {
        System.Text.StringBuilder   logStr = new System.Text.StringBuilder();

        SysInfologEnumerator infoEnumerator = SysInfologEnumerator::newData(this.InfologData);

        while (infoEnumerator.moveNext())
        {
            SysInfologMessageStruct infoMessageStruct = SysInfologMessageStruct::construct(infoEnumerator.currentMessage());

            int p = infoMessageStruct.prefixDepth();

            for (int i = 1; i <= p; i++)
            {
                logStr.Append(infoMessageStruct.preFixTextElement(i) + '. ');
            }

            logStr.AppendLine(infoMessageStruct.message());
        }

        return logStr.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@OneMoreActionQueueFramework:OneMoreActionQueueLogTable</DeveloperDocumentation>
	<Label>@OneMoreActionQueueFramework:OneMoreActionQueueLogTable</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>RefRecId</TitleField1>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RefRecIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ReplacementKey>RefRecIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InfologData</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StackTrace</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OverviewGrid</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreatedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExceptionTypeName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>InfologData</Name>
			<ExtendedDataType>InfologData</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExceptionTypeName</Name>
			<ExtendedDataType>OneMoreActionQueueLogExceptionTypeName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StackTrace</Name>
			<ExtendedDataType>OneMoreActionQueueLogStackTrace</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefRecIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>OneMoreActionQueue</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>OneMoreActionQueue</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>