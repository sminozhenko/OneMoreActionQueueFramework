<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>OneMoreActionQueueContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Action queue base contract class
/// </summary>
[DataContract]
abstract class OneMoreActionQueueContract
{
    private DataAreaId dataAreaId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDataAreaId</Name>
				<Source><![CDATA[
    [
        DataMember("DataAreaId"),
        Hookable(false)
    ]
    public DataAreaId parmDataAreaId(DataAreaId _dataAreaId = dataAreaId)
    {
        dataAreaId = _dataAreaId;
        return dataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParameterValue</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public AnyType getParameterValue(str _parameterName)
    {
        boolean isFound;
        anytype parameterValue;

        [isFound, parameterValue] = this.getParameterValueInternal(_parameterName);

        if (!isFound)
        {
            throw error(strFmt("@OneMoreActionQueueFramework:OneMoreActionQueueParameterNotFoundInContract", _parameterName));
        }

        return parameterValue;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getParameterValueInternal</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected container getParameterValueInternal(str _parameterName)
    {
        boolean isFound;
        anytype parameterValue;
        
        SysDictClass sysDictClass = new SysDictClass(classidget(this)); 
        
        Set methods = sysDictClass.methods(true, false, true);
        SetEnumerator methodsEnumerator = methods.getEnumerator();

        while(methodsEnumerator.moveNext())
        {
            DictMethod dictMethod = methodsEnumerator.current();
            
            DataMemberAttribute dataMember = dictMethod.getAttribute(classStr(DataMemberAttribute));
            
            if (dataMember && dataMember.Name() == _parameterName)
            {
                parameterValue = sysDictClass.callObject(dictMethod.Name(), this);
                isFound = true;

                break;
            }
        }

        return [isFound, parameterValue];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>