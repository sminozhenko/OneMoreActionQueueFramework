<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>OneMoreActionQueueMenuItemParametersSet</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Set menu item parameter for action queue
/// </summary>
internal class OneMoreActionQueueMenuItemParametersSet extends RunBase
{
    private OneMoreActionQueueMenuItemName              menuItemName;
    private ClassName                                   jobClassName;
    private OneMoreActionQueueMenuItemSkipPackUnpack    skipPackUnpack;
    
    private OneMoreActionQueueTypeTable                 oneMoreActionQueueTypeTable;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static OneMoreActionQueueMenuItemParametersSet construct()
    {
        return new OneMoreActionQueueMenuItemParametersSet();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOneMoreActionQueueTypeTable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public OneMoreActionQueueTypeTable parmOneMoreActionQueueTypeTable(OneMoreActionQueueTypeTable _oneMoreActionQueueTypeTable = oneMoreActionQueueTypeTable)
    {
        oneMoreActionQueueTypeTable = _oneMoreActionQueueTypeTable;
        return oneMoreActionQueueTypeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuItemName</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public OneMoreActionQueueMenuItemName parmMenuItemName(OneMoreActionQueueMenuItemName _menuItemName = menuItemName)
    {
        menuItemName = _menuItemName;
        return menuItemName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJobClassName</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ClassName parmJobClassName(ClassName _jobClassName = jobClassName)
    {
        jobClassName = _jobClassName;
        return jobClassName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipPackUnpack</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public OneMoreActionQueueMenuItemSkipPackUnpack parmSkipPackUnpack(OneMoreActionQueueMenuItemSkipPackUnpack _skipPackUnpack = skipPackUnpack)
    {
        skipPackUnpack = _skipPackUnpack;
        return skipPackUnpack;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        Dialog ret = Dialog::newFormnameRunbase(formStr(OneMoreActionQueueMenuItemParametersDialog), this);

        return this.dialogInternal(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object calledFrom = null)
    {
        boolean ret;

        ret = super(calledFrom);

        if (menuItemName && jobClassName || (!menuItemName && !jobClassName))
        {
            ret = checkFailed("@OneMoreActionQueueFramework:OneMoreActionQueueEitherMenuItemOrClassNameSelected");
        }

        if (ret)
        {
            if (menuItemName)
            {
                ret = OneMoreActionQueueTypeMenuItemParameterTable::checkMenuItemName(menuItemName) && ret;
            }

            if (jobClassName)
            {
                ret = OneMoreActionQueueTypeMenuItemParameterTable::isClassSupported(jobClassName) && ret;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static void main(Args _args)
    {
        if (!_args || !_args.record() || _args.record().TableId != tableNum(OneMoreActionQueueTypeTable))
        {
            throw error(Error::missingRecord(funcname()));
        }

        OneMoreActionQueueMenuItemParametersSet oneMoreActionQueueMenuItemParametersSet = OneMoreActionQueueMenuItemParametersSet::construct();

        oneMoreActionQueueMenuItemParametersSet.parmOneMoreActionQueueTypeTable(_args.record());

        OneMoreActionQueueTypeMenuItemParameterTable oneMoreActionQueueTypeMenuItemParameterTable = oneMoreActionQueueMenuItemParametersSet.parmOneMoreActionQueueTypeTable().oneMoreActionQueueTypeMenuItemParameterTable();

        if (oneMoreActionQueueTypeMenuItemParameterTable.RecId != 0)
        {
            oneMoreActionQueueMenuItemParametersSet.parmMenuItemName(oneMoreActionQueueTypeMenuItemParameterTable.MenuItemName);
            oneMoreActionQueueMenuItemParametersSet.parmJobClassName(oneMoreActionQueueTypeMenuItemParameterTable.className());
            oneMoreActionQueueMenuItemParametersSet.parmSkipPackUnpack(oneMoreActionQueueTypeMenuItemParameterTable.SkipPackUnpack);
        }

        if (oneMoreActionQueueTypeMenuItemParameterTable.RecId != 0 || oneMoreActionQueueMenuItemParametersSet.prompt())
        {
            oneMoreActionQueueMenuItemParametersSet.runOperation();

            if (_args.record())
            {
                if (FormDataUtil::isFormDataSource(_args.record()))
                {
                    FormDataSource fds = FormDataUtil::getFormDataSource(_args.record());
                    fds.research(true);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        OneMoreActionQueueTypeMenuItemParameterTable oneMoreActionQueueTypeMenuItemParameterTable = oneMoreActionQueueTypeTable.oneMoreActionQueueTypeMenuItemParameterTable();

        try
        {
            if (oneMoreActionQueueTypeMenuItemParameterTable.RecId == 0)
            {
                oneMoreActionQueueTypeMenuItemParameterTable.TypeId         = oneMoreActionQueueTypeTable.TypeId;
                oneMoreActionQueueTypeMenuItemParameterTable.MenuItemName   = menuItemName;
                oneMoreActionQueueTypeMenuItemParameterTable.ClassName      = jobClassName;
                oneMoreActionQueueTypeMenuItemParameterTable.SkipPackUnpack = skipPackUnpack;
            }

            if (oneMoreActionQueueTypeMenuItemParameterTable.RecId == 0 && menuItemName)
            {
                OneMoreActionQueueContext::oneMoreActionQueueTypeMenuItemParameterTable = oneMoreActionQueueTypeMenuItemParameterTable;

                OneMoreActionQueueTypeMenuItemParameterTable::menuFunction(menuItemName).run(new Args());
            }
            else
            {
                OneMoreActionQueueMenuItemBehavior menuItemBehavior = OneMoreActionQueueMenuItemBehavior::construct(jobClassName);

                menuItemBehavior.initialize();

                // Check if there are parameters saved in the batch table and unpack them
                if (oneMoreActionQueueTypeMenuItemParameterTable.PackedParameters != conNull())
                {
                    if (!menuItemBehavior.unpackParameters(oneMoreActionQueueTypeMenuItemParameterTable.PackedParameters))
                    {
                        //TODO check, maybe better to clean packed parameters if they are corrupted (or create a button to clean it)
                        return;
                    }
                }

                if (menuItemBehavior.promptDialog() && menuItemBehavior.promptDialogPost())
                {
                    OneMoreActionQueueTypeMenuItemParameterTable::updateParameters(oneMoreActionQueueTypeMenuItemParameterTable, jobClassName, oneMoreActionQueueTypeMenuItemParameterTable.SkipPackUnpack ? conNull() : menuItemBehavior.packParameters());
                }
            }
        }
        finally
        {
            OneMoreActionQueueContext::oneMoreActionQueueTypeMenuItemParameterTable = null;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// To determine if can run the inquiry in new session or not.
    /// </summary>
    /// <returns>
    /// True if can run the inquiry in new session; otherwise, false.
    /// </returns>
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>