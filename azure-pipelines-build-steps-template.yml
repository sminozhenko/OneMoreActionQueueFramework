steps:
- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: 'Replace version in packages.config'
  inputs:
    targetFiles: packages.config    
- bash: cat packages.config    
  displayName: 'List packages.config'

- task: NuGetInstaller@0
  displayName: 'NuGet install Packages'
  inputs:
    solution: '$(NugetConfigsPath)\packages.config'
    nugetConfigPath: '$(NugetConfigsPath)\nuget.config'
    restoreMode: install
    nuGetRestoreArgs: '-ExcludeVersion -OutputDirectory "$(NugetsPath)"'
    verbosity: Detailed
    nuGetVersion: 4.0.0.2283

- task: CopyFiles@2
  displayName: 'Copy Binary Dependencies to: $(Build.BinariesDirectory)'
  inputs:
    SourceFolder: '$(MetadataPath)'
    Contents: '**/bin/**'
    TargetFolder: '$(Build.BinariesDirectory)'
    
- task: VSBuild@1
  displayName: 'Build solution $(Build.SourcesDirectory)\**\*.sln'
  inputs:
    solution: '$(Build.SourcesDirectory)\**\*.sln'
    vsVersion: 15.0
    msbuildArgs: '/p:BuildTasksDirectory="$(NugetsPath)\$(ToolsPackage)\DevAlm" /p:MetadataDirectory="$(MetadataPath)" /p:FrameworkDirectory="$(NuGetsPath)\$(ToolsPackage)" /p:ReferenceFolder="$(NuGetsPath)\$(PlatPackage)\ref\net40;$(NuGetsPath)\$(AppPackage)\ref\net40;$(MetadataPath);$(Build.BinariesDirectory)" /p:ReferencePath="$(NuGetsPath)\$(ToolsPackage)" /p:OutputDirectory="$(Build.BinariesDirectory)"'
    msbuildArchitecture: x64
    
- task: fcs-mpo.FcsDynamics365BuildTasks.FcsDynamics365ExecuteBestPractices.FcsDynamics365ExecuteBestPractices@1
  displayName: 'Execute best practices checks'
  
- task: fcs-mpo.FcsDynamics365BuildTasks.FcsDynamics365AnalyzeBuildQuality.FcsDynamics365AnalyzeBuildQuality@1
  displayName: 'Analyze build quality'
  inputs:
    checkBestPractices: true
    checkTodos: true
    checkCompilerWarnings: true
  continueOnError: true

- task: fcs-mpo.FcsDynamics365BuildTasks.FcsDynamics365BuildSummary.FcsDynamics365BuildSummary@1
  displayName: 'Generate build quality summary'
  continueOnError: true

- task: CopyFiles@2
  displayName: 'Copy X++ Compile Log Files to: $(Build.ArtifactStagingDirectory)\Logs'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
     **\Dynamics.AX.*.xppc.*
     **\Dynamics.AX.*.labelc.*
     **\Dynamics.AX.*.reportsc.*
     **\Dynamics.AX.*.xppbp.*
    TargetFolder: '$(Build.ArtifactStagingDirectory)\Logs'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
