# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- '*'

pool:
  vmImage: 'vs2017-win2016'
  
variables:
  NugetConfigsPath: '$(Build.SourcesDirectory)'
  NugetsPath: '$(Pipeline.Workspace)\NuGets'
  MetadataPath: '$(Build.SourcesDirectory)'
  ToolsPackage: 'Microsoft.Dynamics.AX.Platform.CompilerPackage'
  AppPackage: 'Microsoft.Dynamics.AX.Application.DevALM.BuildXpp'
  PlatPackage: 'Microsoft.Dynamics.AX.Platform.DevALM.BuildXpp'

steps:
- task: NuGetInstaller@0
  displayName: 'NuGet install Packages'
  inputs:
    solution: '$(NugetConfigsPath)\packages.config'
    nugetConfigPath: '$(NugetConfigsPath)\nuget.config'
    restoreMode: install
    nuGetRestoreArgs: '-ExcludeVersion -OutputDirectory "$(NugetsPath)"'
    verbosity: Detailed
    nuGetVersion: 4.0.0.2283

- task: CopyFiles@2
  displayName: 'Copy Binary Dependencies to: $(Build.BinariesDirectory)'
  inputs:
    SourceFolder: '$(MetadataPath)'
    Contents: '**/bin/**'
    TargetFolder: '$(Build.BinariesDirectory)'
    
- task: VSBuild@1
  displayName: 'Build solution $(Build.SourcesDirectory)\**\*.sln'
  inputs:
    solution: '$(Build.SourcesDirectory)\**\*.sln'
    vsVersion: 15.0
    msbuildArgs: '/p:BuildTasksDirectory="$(NugetsPath)\$(ToolsPackage)\DevAlm" /p:MetadataDirectory="$(MetadataPath)" /p:FrameworkDirectory="$(NuGetsPath)\$(ToolsPackage)" /p:ReferenceFolder="$(NuGetsPath)\$(PlatPackage)\ref\net40;$(NuGetsPath)\$(AppPackage)\ref\net40;$(MetadataPath);$(Build.BinariesDirectory)" /p:ReferencePath="$(NuGetsPath)\$(ToolsPackage)" /p:OutputDirectory="$(Build.BinariesDirectory)"'
    msbuildArchitecture: x64

- task: CopyFiles@2
  displayName: 'Copy X++ Compile Log Files to: $(Build.ArtifactStagingDirectory)\Logs'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
     **\Dynamics.AX.*.xppc.*
     **\Dynamics.AX.*.labelc.*
     **\Dynamics.AX.*.reportsc.*
     **\Dynamics.AX.*.xppbp.*
    TargetFolder: '$(Build.ArtifactStagingDirectory)\Logs'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
